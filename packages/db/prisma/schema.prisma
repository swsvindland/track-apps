// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
    // directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
    // shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model UserBloodPressure {
    id        BigInt   @id @default(autoincrement())
    userId    String
    systolic  Int
    diastolic Int
    heartRate Int?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserWeight {
    id        BigInt   @id @default(autoincrement())
    userId    String
    weight    Float
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserHeight {
    id        BigInt   @id @default(autoincrement())
    userId    String
    height    Float
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserSettings {
    id        BigInt   @id @default(autoincrement())
    userId    String
    unit      String
    sex       String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserWater {
    id        BigInt   @id @default(autoincrement())
    userId    String
    drinkId   BigInt
    drink     Drink    @relation(fields: [drinkId], references: [id])
    amount    Float
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserAlcohol {
    id        BigInt   @id @default(autoincrement())
    userId    String
    alcoholId BigInt
    Alcohol   Alcohol  @relation(fields: [alcoholId], references: [id])
    amount    Float
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Drink {
    id          BigInt      @id @default(autoincrement())
    name        String
    hydration   Float
    servingSize Int
    calories    Int
    caffeine    Float       @default(0)
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    UserWater   UserWater[]
}

model Alcohol {
    id          BigInt        @id @default(autoincrement())
    name        String
    servingSize Int
    calories    Int
    alcohol     Float
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    UserAlcohol UserAlcohol[]
}
